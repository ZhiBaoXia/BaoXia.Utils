namespace BaoXia.Utils
{
	public class LogFileTemplateInHtml
	{
		public static string GetHtmlWithServerName(
			string? serverName,
			string? logType,
			string? logfileName)
		{
			var title = serverName?.Length > 0 ? serverName : "";
			{
				if (logType?.Length > 0)
				{
					if (title?.Length > 0)
					{
						title += "-";
					}
					title += logType;
				}
				if (logfileName?.Length > 0)
				{
					if (title?.Length > 0)
					{
						title += "-";
					}
					title += logfileName;
				}
			}
			var html
				= "<head>"
				+ "\r\n  <title>" + serverName + "-" + logType + "-" + logfileName + "</title>"
				+ "\r\n  <style type=\"text/css\">"
				+ "\r\n    body {"
				+ "\r\n      --Body-MinWidth: 1600px;"
				+ "\r\n"
				+ "\r\n      --ButtonWidth: 120px;"
				+ "\r\n"
				+ "\r\n      --Background-Highlight: linear-gradient(to bottom right, rgba(40, 168, 248, 0.65), #28a8ff);"
				+ "\r\n      --Background-Top: #fee082;"
				+ "\r\n"
				+ "\r\n      --FontSize: 14px;"
				+ "\r\n"
				+ "\r\n      --TextColor: #333;"
				+ "\r\n      --TextColor-Highlight: white;"
				+ "\r\n      --TextColor-Lowlight: #dfdfdf;"
				+ "\r\n      --TextShadowColor-Highlight: #28a8ff;"
				+ "\r\n"
				+ "\r\n      --BorderRadius: 5px;"
				+ "\r\n      --LineHeight: 26px;"
				+ "\r\n      --Padding: 10px;"
				+ "\r\n      --InnerPadding: 10px;"
				+ "\r\n      --FormRowHeight: 50px;"
				+ "\r\n      --FormLineHeight: 40px;"
				+ "\r\n"
				+ "\r\n      --InputBorderColor: #f8f8f8;"
				+ "\r\n      --InputBorderColor-Hover: #dfdfdf;"
				+ "\r\n      --InputBorderColor-Focus: #28a8ff;"
				+ "\r\n      --InputBackgroundColor: #f8f8f8;"
				+ "\r\n"
				+ "\r\n"
				+ "\r\n    }"
				+ "\r\n"
				+ "\r\n    html,"
				+ "\r\n    body {"
				+ "\r\n      margin: 0px;"
				+ "\r\n      padding: 0px;"
				+ "\r\n      width: 100%;"
				+ "\r\n      min-width: var(--Body-MinWidth);"
				+ "\r\n      height: 100vh;"
				+ "\r\n      color: var(--TextColor);"
				+ "\r\n    }"
				+ "\r\n"
				+ "\r\n    .LowlightText {"
				+ "\r\n      color: var(--TextColor-Lowlight);"
				+ "\r\n    }"
				+ "\r\n"
				+ "\r\n    input,"
				+ "\r\n    button {"
				+ "\r\n      margin: 0px;"
				+ "\r\n      box-sizing: border-box;"
				+ "\r\n      outline: none;"
				+ "\r\n      height: var(--FormLineHeight);"
				+ "\r\n      border: 2px solid var(--InputBorderColor);"
				+ "\r\n      border-radius: var(--BorderRadius);"
				+ "\r\n      background-color: var(--InputBackgroundColor);"
				+ "\r\n      line-height: var(--FormLineHeight);"
				+ "\r\n      padding: var(--InnerPadding);"
				+ "\r\n      font-size: var(--FontSize);"
				+ "\r\n    }"
				+ "\r\n"
				+ "\r\n    input:hover {"
				+ "\r\n      border-color: var(--InputBorderColor-Hover);"
				+ "\r\n    }"
				+ "\r\n"
				+ "\r\n    input:focus {"
				+ "\r\n      border-color: var(--InputBorderColor-Focus);"
				+ "\r\n    }"
				+ "\r\n"
				+ "\r\n    button {"
				+ "\r\n      width: var(--ButtonWidth);"
				+ "\r\n      padding: 0px var(--InnerPadding);"
				+ "\r\n      cursor: pointer;"
				+ "\r\n    }"
				+ "\r\n"
				+ "\r\n    button:hover {"
				+ "\r\n      filter: brightness(110%);"
				+ "\r\n    }"
				+ "\r\n"
				+ "\r\n    button:active {"
				+ "\r\n      filter: brightness(95%);"
				+ "\r\n      padding-left: calc(var(--InnerPadding) + 1px);"
				+ "\r\n      padding-top: 1px;"
				+ "\r\n    }"
				+ "\r\n"
				+ "\r\n    button.Square {"
				+ "\r\n      width: var(--FormLineHeight);"
				+ "\r\n    }"
				+ "\r\n"
				+ "\r\n    button.Highlight {"
				+ "\r\n      border: none;"
				+ "\r\n      background: var(--Background-Highlight);"
				+ "\r\n      color: var(--TextColor-Highlight);"
				+ "\r\n      text-shadow: 0px 1px 1px var(--TextShadowColor-Highlight);"
				+ "\r\n    }"
				+ "\r\n"
				+ "\r\n    #topBarFrame {"
				+ "\r\n      height: 168px;"
				+ "\r\n    }"
				+ "\r\n"
				+ "\r\n    #topBarFrame.Expand {"
				+ "\r\n      height: 218px;"
				+ "\r\n    }"
				+ "\r\n"
				+ "\r\n    #topBar {"
				+ "\r\n      position: fixed;"
				+ "\r\n      top: 0px;"
				+ "\r\n      width: 100%;"
				+ "\r\n      min-width: var(--Body-MinWidth);"
				+ "\r\n      padding: 0px var(--Padding) var(--Padding) var(--Padding);"
				+ "\r\n      background-color: rgba(255, 255, 255, 0.65);"
				+ "\r\n      backdrop-filter: blur(10px);"
				+ "\r\n      box-shadow: 0px 0px 5px 5px rgb(0 0 0 / 5%);"
				+ "\r\n    }"
				+ "\r\n"
				+ "\r\n    #allLogsInfoBar,"
				+ "\r\n    .ToolBar {"
				+ "\r\n      display: block;"
				+ "\r\n      margin: 0px;"
				+ "\r\n      padding: 0px;"
				+ "\r\n      width: 100%;"
				+ "\r\n      display: flex;"
				+ "\r\n      flex-direction: row;"
				+ "\r\n      align-items: flex-start;"
				+ "\r\n      line-height: var(--FormRowHeight);"
				+ "\r\n    }"
				+ "\r\n"
				+ "\r\n    #tipBar {"
				+ "\r\n      display: none;"
				+ "\r\n      position: fixed;"
				+ "\r\n      width: 100%;"
				+ "\r\n      padding: var(--Padding);"
				+ "\r\n      background-color: var(--Background-Top);"
				+ "\r\n      line-height: var(--LineHeight);"
				+ "\r\n    }"
				+ "\r\n"
				+ "\r\n    #moreFilterOptions {"
				+ "\r\n      display: none;"
				+ "\r\n    }"
				+ "\r\n"
				+ "\r\n    #moreFilterOptionsButton.Selected svg {"
				+ "\r\n      transform: rotateX(180deg);"
				+ "\r\n    }"
				+ "\r\n"
				+ "\r\n    log,"
				+ "\r\n    time,"
				+ "\r\n    invoker,"
				+ "\r\n    content {"
				+ "\r\n      display: block;"
				+ "\r\n      line-height: var(--LineHeight);"
				+ "\r\n    }"
				+ "\r\n"
				+ "\r\n    log {"
				+ "\r\n      margin-top: var(--LineHeight);"
				+ "\r\n      border: 1px solid transparent;"
				+ "\r\n      box-sizing: border-box;"
				+ "\r\n      padding: var(--Padding);"
				+ "\r\n    }"
				+ "\r\n"
				+ "\r\n    log:nth-child(even) {"
				+ "\r\n      background-color: #F8F8F8;"
				+ "\r\n    }"
				+ "\r\n"
				+ "\r\n    log:hover {"
				+ "\r\n      border: 1px dashed skyblue;"
				+ "\r\n    }"
				+ "\r\n  </style>"
				+ "\r\n  <script>"
				+ "\r\n    function timeNumberCaption (timeNumber)"
				+ "\r\n    {"
				+ "\r\n      var caption = timeNumber.toString();"
				+ "\r\n      var digitsCount = 2;"
				+ "\r\n      if (caption.length > 2)"
				+ "\r\n      {"
				+ "\r\n        digitsCount = 4;"
				+ "\r\n      }"
				+ "\r\n      while (caption.length < digitsCount)"
				+ "\r\n      {"
				+ "\r\n        caption = \"0\" + caption;"
				+ "\r\n      }"
				+ "\r\n      return caption;"
				+ "\r\n    }"
				+ "\r\n    function timeCaptionWithYear (year, month, day, hour, minute, second)"
				+ "\r\n    {"
				+ "\r\n      var caption"
				+ "\r\n        = timeNumberCaption(year)"
				+ "\r\n        + \"/\""
				+ "\r\n        + timeNumberCaption(month)"
				+ "\r\n        + \"/\""
				+ "\r\n        + timeNumberCaption(day)"
				+ "\r\n        + \" \""
				+ "\r\n        + timeNumberCaption(hour)"
				+ "\r\n        + \":\""
				+ "\r\n        + timeNumberCaption(minute)"
				+ "\r\n        + \":\""
				+ "\r\n        + timeNumberCaption(second);"
				+ "\r\n      { }"
				+ "\r\n      return caption;"
				+ "\r\n    }"
				+ "\r\n    function timeCaptionWithDate (date)"
				+ "\r\n    {"
				+ "\r\n      return timeCaptionWithYear("
				+ "\r\n        date.getFullYear(),"
				+ "\r\n        date.getMonth() + 1,"
				+ "\r\n        date.getDate(),"
				+ "\r\n        date.getHours(),"
				+ "\r\n        date.getMinutes(),"
				+ "\r\n        date.getSeconds());"
				+ "\r\n    }"
				+ "\r\n"
				+ "\r\n    var toDidDateTimeInputFocus = function ()"
				+ "\r\n    {"
				+ "\r\n      var input = event.target;"
				+ "\r\n      input.select();"
				+ "\r\n    }"
				+ "\r\n    var toDidDateTimeInputBlur = function ()"
				+ "\r\n    {"
				+ "\r\n      var input = event.target;"
				+ "\r\n      var timeUserInputed = input.value;"
				+ "\r\n      if (timeUserInputed == null"
				+ "\r\n        || timeUserInputed.length < 1)"
				+ "\r\n      {"
				+ "\r\n        // !!!"
				+ "\r\n        input.setAttribute(\"timeStamp\", null);"
				+ "\r\n        // !!!"
				+ "\r\n        return;"
				+ "\r\n      }"
				+ "\r\n"
				+ "\r\n      var year = 0;"
				+ "\r\n      var month = 0;"
				+ "\r\n      var day = 0;"
				+ "\r\n      var hour = 0;"
				+ "\r\n      var minute = 0;"
				+ "\r\n      var second = 0;"
				+ "\r\n      if (timeUserInputed.length == \"2022/02/12 03:40:17\".length)"
				+ "\r\n      {"
				+ "\r\n        year = parseInt(timeUserInputed.substring(0, 4));"
				+ "\r\n        month = parseInt(timeUserInputed.substring(5, 7));"
				+ "\r\n        day = parseInt(timeUserInputed.substring(8, 10));"
				+ "\r\n        hour = parseInt(timeUserInputed.substring(11, 13));"
				+ "\r\n        minute = parseInt(timeUserInputed.substring(14, 16));"
				+ "\r\n        second = parseInt(timeUserInputed.substring(17, 19));"
				+ "\r\n      }"
				+ "\r\n      else if (timeUserInputed.length == \"20220212211600\".length)"
				+ "\r\n      {"
				+ "\r\n        year = parseInt(timeUserInputed.substring(0, 4));"
				+ "\r\n        month = parseInt(timeUserInputed.substring(4, 6));"
				+ "\r\n        day = parseInt(timeUserInputed.substring(6, 8));"
				+ "\r\n        hour = parseInt(timeUserInputed.substring(8, 10));"
				+ "\r\n        minute = parseInt(timeUserInputed.substring(10, 12));"
				+ "\r\n        second = parseInt(timeUserInputed.substring(12, 14));"
				+ "\r\n      }"
				+ "\r\n      else if (timeUserInputed.length == \"202202122116\".length)"
				+ "\r\n      {"
				+ "\r\n        year = parseInt(timeUserInputed.substring(0, 4));"
				+ "\r\n        month = parseInt(timeUserInputed.substring(4, 6));"
				+ "\r\n        day = parseInt(timeUserInputed.substring(6, 8));"
				+ "\r\n        hour = parseInt(timeUserInputed.substring(8, 10));"
				+ "\r\n        minute = parseInt(timeUserInputed.substring(10, 12));"
				+ "\r\n      }"
				+ "\r\n      else if (timeUserInputed.length == \"0212211600\".length)"
				+ "\r\n      {"
				+ "\r\n        year = new Date().getFullYear();"
				+ "\r\n        month = parseInt(timeUserInputed.substring(0, 2));"
				+ "\r\n        day = parseInt(timeUserInputed.substring(2, 4));"
				+ "\r\n        hour = parseInt(timeUserInputed.substring(4, 6));"
				+ "\r\n        minute = parseInt(timeUserInputed.substring(6, 8));"
				+ "\r\n        second = parseInt(timeUserInputed.substring(8, 10));"
				+ "\r\n      }"
				+ "\r\n      else if (timeUserInputed.length == \"02122116\".length)"
				+ "\r\n      {"
				+ "\r\n        year = new Date().getFullYear();"
				+ "\r\n        month = parseInt(timeUserInputed.substring(0, 2));"
				+ "\r\n        day = parseInt(timeUserInputed.substring(2, 4));"
				+ "\r\n        hour = parseInt(timeUserInputed.substring(4, 6));"
				+ "\r\n        minute = parseInt(timeUserInputed.substring(6, 8));"
				+ "\r\n      }"
				+ "\r\n      else if (timeUserInputed.length == \"211600\".length)"
				+ "\r\n      {"
				+ "\r\n        var now = new Date();"
				+ "\r\n        year = now.getFullYear();"
				+ "\r\n        month = now.getMonth() + 1;"
				+ "\r\n        day = now.getDate();"
				+ "\r\n        hour = parseInt(timeUserInputed.substring(0, 2));"
				+ "\r\n        minute = parseInt(timeUserInputed.substring(2, 4));"
				+ "\r\n        second = parseInt(timeUserInputed.substring(4, 6));"
				+ "\r\n      }"
				+ "\r\n      else"
				+ "\r\n      {"
				+ "\r\n        return;"
				+ "\r\n      }"
				+ "\r\n"
				+ "\r\n      var dateTimeCaption"
				+ "\r\n        = timeCaptionWithYear("
				+ "\r\n          year,"
				+ "\r\n          month,"
				+ "\r\n          day,"
				+ "\r\n          //"
				+ "\r\n          hour,"
				+ "\r\n          minute,"
				+ "\r\n          second);"
				+ "\r\n      // !!!"
				+ "\r\n      input.value = dateTimeCaption;"
				+ "\r\n      //"
				+ "\r\n      var dateTime = new Date(year, month - 1, day, hour, minute, second, 0);"
				+ "\r\n      input.setAttribute(\"timeStamp\", dateTime.getTime());"
				+ "\r\n      // !!!"
				+ "\r\n    };"
				+ "\r\n    var _allLogsBeginTime = 0;"
				+ "\r\n    var _allLogsEndTime = 0;"
				+ "\r\n    function updateLogRecordsInfo ()"
				+ "\r\n    {"
				+ "\r\n      var logTags = document.getElementsByTagName(\"log\");"
				+ "\r\n      if (logTags == null"
				+ "\r\n        || logTags.length < 1)"
				+ "\r\n      {"
				+ "\r\n        return;"
				+ "\r\n      }"
				+ "\r\n      var allLogTagsCount = logTags.length;"
				+ "\r\n      var visibleLogTagsCount = 0;"
				+ "\r\n      for (var i = 0;"
				+ "\r\n        i < logTags.length;"
				+ "\r\n        i++)"
				+ "\r\n      {"
				+ "\r\n        var logTag = logTags[i];"
				+ "\r\n        if (logTag.style.display != \"none\")"
				+ "\r\n        {"
				+ "\r\n          visibleLogTagsCount++;"
				+ "\r\n        }"
				+ "\r\n"
				+ "\r\n        var logTimeTag = logTag.getElementsByTagName(\"time\")[0];"
				+ "\r\n        var logTime = parseInt(logTimeTag.getAttribute(\"logTimestamp\"));"
				+ "\r\n        if (_allLogsBeginTime == 0"
				+ "\r\n          || _allLogsBeginTime > logTime)"
				+ "\r\n        {"
				+ "\r\n          _allLogsBeginTime = logTime"
				+ "\r\n        }"
				+ "\r\n        if (_allLogsEndTime == 0"
				+ "\r\n          || _allLogsEndTime < logTime)"
				+ "\r\n        {"
				+ "\r\n          _allLogsEndTime = logTime"
				+ "\r\n        }"
				+ "\r\n      }"
				+ "\r\n"
				+ "\r\n      var allLogsInfoInHtml"
				+ "\r\n        = \"当前日志条目数量：\" + visibleLogTagsCount + \"<span class=\\\"LowlightText\\\">/\" + allLogTagsCount + \"</span>\";"
				+ "\r\n      { }"
				+ "\r\n      document.getElementById(\"allLogsInfoBar\").innerHTML = allLogsInfoInHtml;"
				+ "\r\n    }"
				+ "\r\n    function filterLogs ("
				+ "\r\n      beginTime = null,"
				+ "\r\n      endTime = null,"
				+ "\r\n      keywordsMustContained_0 = null,"
				+ "\r\n      keywordsMustContained_1 = null,"
				+ "\r\n      keywordsMustNoneContained_0 = null,"
				+ "\r\n      keywordsMustNoneContained_1 = null)"
				+ "\r\n    {"
				+ "\r\n      try"
				+ "\r\n      {"
				+ "\r\n        beginTime = parseInt(beginTime);"
				+ "\r\n        if (isNaN(beginTime))"
				+ "\r\n        {"
				+ "\r\n          beginTime = null;"
				+ "\r\n        } else"
				+ "\r\n        {"
				+ "\r\n          beginTime = Math.floor(beginTime / 1000) * 1000;"
				+ "\r\n        }"
				+ "\r\n      }"
				+ "\r\n      catch (exception)"
				+ "\r\n      {"
				+ "\r\n        beginTime = null;"
				+ "\r\n      }"
				+ "\r\n      try"
				+ "\r\n      {"
				+ "\r\n        endTime = parseInt(endTime);"
				+ "\r\n        if (isNaN(endTime))"
				+ "\r\n        {"
				+ "\r\n          endTime = null;"
				+ "\r\n        } else"
				+ "\r\n        {"
				+ "\r\n          endTime = Math.floor(endTime / 1000) * 1000;"
				+ "\r\n        }"
				+ "\r\n      }"
				+ "\r\n      catch (exception)"
				+ "\r\n      {"
				+ "\r\n        endTime = null;"
				+ "\r\n      }"
				+ "\r\n"
				+ "\r\n      var logTags = document.getElementsByTagName(\"log\");"
				+ "\r\n      if (logTags == null"
				+ "\r\n        || logTags.length < 1)"
				+ "\r\n      {"
				+ "\r\n        return;"
				+ "\r\n      }"
				+ "\r\n"
				+ "\r\n      var regExpToFindIgnorecase_KeywordsMustContained_0"
				+ "\r\n        = keywordsMustContained_0 != null"
				+ "\r\n          && keywordsMustContained_0.length > 0"
				+ "\r\n          ? new RegExp(keywordsMustContained_0, \"i\")"
				+ "\r\n          : null;"
				+ "\r\n      var regExpToFindIgnorecase_KeywordsMustContained_1"
				+ "\r\n        = keywordsMustContained_1 != null"
				+ "\r\n          && keywordsMustContained_1.length > 0"
				+ "\r\n          ? new RegExp(keywordsMustContained_1, \"i\")"
				+ "\r\n          : null;"
				+ "\r\n"
				+ "\r\n      var regExpToFindIgnorecase_KeywordsMustNoneContained_0"
				+ "\r\n        = keywordsMustNoneContained_0 != null"
				+ "\r\n          && keywordsMustNoneContained_0.length > 0"
				+ "\r\n          ? new RegExp(keywordsMustNoneContained_0, \"i\")"
				+ "\r\n          : null;"
				+ "\r\n      var regExpToFindIgnorecase_KeywordsMustNoneContained_1"
				+ "\r\n        = keywordsMustNoneContained_1 != null"
				+ "\r\n          && keywordsMustNoneContained_1.length > 0"
				+ "\r\n          ? new RegExp(keywordsMustNoneContained_1, \"i\")"
				+ "\r\n          : null;"
				+ "\r\n"
				+ "\r\n      for (var i = 0;"
				+ "\r\n        i < logTags.length;"
				+ "\r\n        i++)"
				+ "\r\n      {"
				+ "\r\n        var logTag = logTags[i];"
				+ "\r\n"
				+ "\r\n        var isLogTimeValid = true;"
				+ "\r\n        if (beginTime != null"
				+ "\r\n          || endTime != null)"
				+ "\r\n        {"
				+ "\r\n          var logTimeTag = logTag.getElementsByTagName(\"time\")[0];"
				+ "\r\n          var logTime = parseInt(logTimeTag.getAttribute(\"logTimestamp\"));"
				+ "\r\n          {"
				+ "\r\n            logTime = Math.floor(logTime / 1000) * 1000;"
				+ "\r\n          }"
				+ "\r\n          if (beginTime != null"
				+ "\r\n            && endTime != null)"
				+ "\r\n          {"
				+ "\r\n            isLogTimeValid"
				+ "\r\n              = logTime >= beginTime"
				+ "\r\n              && logTime <= endTime;"
				+ "\r\n          }"
				+ "\r\n          else if (beginTime != null)"
				+ "\r\n          {"
				+ "\r\n            isLogTimeValid"
				+ "\r\n              = logTime >= beginTime;"
				+ "\r\n          }"
				+ "\r\n          else if (endTime != null)"
				+ "\r\n          {"
				+ "\r\n            isLogTimeValid"
				+ "\r\n              = logTime <= endTime;"
				+ "\r\n          }"
				+ "\r\n        }"
				+ "\r\n"
				+ "\r\n        var isContentValid = true;"
				+ "\r\n        if (regExpToFindIgnorecase_KeywordsMustContained_0 != null"
				+ "\r\n          || regExpToFindIgnorecase_KeywordsMustContained_1 != null"
				+ "\r\n          || regExpToFindIgnorecase_KeywordsMustNoneContained_0 != null"
				+ "\r\n          || regExpToFindIgnorecase_KeywordsMustNoneContained_1 != null)"
				+ "\r\n        {"
				+ "\r\n          var logContent = logTag.innerText;"
				+ "\r\n"
				+ "\r\n          if (isContentValid)"
				+ "\r\n          {"
				+ "\r\n            if (regExpToFindIgnorecase_KeywordsMustContained_0 != null"
				+ "\r\n              && !logContent.match(regExpToFindIgnorecase_KeywordsMustContained_0))"
				+ "\r\n            {"
				+ "\r\n              isContentValid = false;"
				+ "\r\n            }"
				+ "\r\n            if (regExpToFindIgnorecase_KeywordsMustContained_1 != null"
				+ "\r\n              && !logContent.match(regExpToFindIgnorecase_KeywordsMustContained_1))"
				+ "\r\n            {"
				+ "\r\n              isContentValid = false;"
				+ "\r\n            }"
				+ "\r\n          }"
				+ "\r\n"
				+ "\r\n          if (isContentValid)"
				+ "\r\n          {"
				+ "\r\n            if (regExpToFindIgnorecase_KeywordsMustNoneContained_0 != null"
				+ "\r\n              && logContent.match(regExpToFindIgnorecase_KeywordsMustNoneContained_0))"
				+ "\r\n            {"
				+ "\r\n              isContentValid = false;"
				+ "\r\n            }"
				+ "\r\n            if (regExpToFindIgnorecase_KeywordsMustNoneContained_1 != null"
				+ "\r\n              && logContent.match(regExpToFindIgnorecase_KeywordsMustNoneContained_1))"
				+ "\r\n            {"
				+ "\r\n              isContentValid = false;"
				+ "\r\n            }"
				+ "\r\n          }"
				+ "\r\n        }"
				+ "\r\n        if (isLogTimeValid"
				+ "\r\n          && isContentValid)"
				+ "\r\n        {"
				+ "\r\n          logTag.style.display = \"block\";"
				+ "\r\n        }"
				+ "\r\n        else"
				+ "\r\n        {"
				+ "\r\n          logTag.style.display = \"none\";"
				+ "\r\n        }"
				+ "\r\n      }"
				+ "\r\n    }"
				+ "\r\n    var _hideTipBarTimerId = 0;"
				+ "\r\n    function didFilterButtonClicked ()"
				+ "\r\n    {"
				+ "\r\n      var beginTime = document.getElementById(\"beginTimeInput\").getAttribute(\"timeStamp\");"
				+ "\r\n      var endTime = document.getElementById(\"endTimeInput\").getAttribute(\"timeStamp\");"
				+ "\r\n      var keywordsMustContained_0 = document.getElementById(\"keywordsMustContainedInput_0\").value;"
				+ "\r\n      var keywordsMustContained_1 = document.getElementById(\"keywordsMustContainedInput_1\").value;"
				+ "\r\n      var keywordsMustNoneContained_0 = document.getElementById(\"keywordsMustNoneContainedInput_0\").value;"
				+ "\r\n      var keywordsMustNoneContained_1 = document.getElementById(\"keywordsMustNoneContainedInput_1\").value;"
				+ "\r\n"
				+ "\r\n      // var tipBar = document.getElementById(\"tipBar\");"
				+ "\r\n      // tipBar.style.display = \"block\";"
				+ "\r\n      // tipBar.innerText = \"正在筛选...\";"
				+ "\r\n      // clearTimeout(_hideTipBarTimerId);"
				+ "\r\n"
				+ "\r\n      filterLogs("
				+ "\r\n        beginTime,"
				+ "\r\n        endTime,"
				+ "\r\n        keywordsMustContained_0,"
				+ "\r\n        keywordsMustContained_1,"
				+ "\r\n        keywordsMustNoneContained_0,"
				+ "\r\n        keywordsMustNoneContained_1);"
				+ "\r\n"
				+ "\r\n      updateLogRecordsInfo();"
				+ "\r\n"
				+ "\r\n      document.body.scrollTop = 0;"
				+ "\r\n"
				+ "\r\n      // _hideTipBarTimerId = setTimeout(() =>"
				+ "\r\n      // {"
				+ "\r\n      // 	var tipBar = document.getElementById(\"tipBar\");"
				+ "\r\n      // 	tipBar.style.display = \"none\";"
				+ "\r\n      // }, 2500);"
				+ "\r\n    }"
				+ "\r\n    function didMoreFilterOptionsButtonClicked ()"
				+ "\r\n    {"
				+ "\r\n      var topBarFrame = document.getElementById(\"topBarFrame\");"
				+ "\r\n      var moreFilterOptionsButton = document.getElementById(\"moreFilterOptionsButton\");"
				+ "\r\n      var moreFilterOptions = document.getElementById(\"moreFilterOptions\");"
				+ "\r\n      if (moreFilterOptionsButton.classList.contains(\"Selected\"))"
				+ "\r\n      {"
				+ "\r\n        topBarFrame.classList.remove(\"Expand\");"
				+ "\r\n        moreFilterOptionsButton.classList.remove(\"Selected\");"
				+ "\r\n        moreFilterOptions.style.display = \"none\";"
				+ "\r\n      }"
				+ "\r\n      else"
				+ "\r\n      {"
				+ "\r\n        topBarFrame.classList.add(\"Expand\");"
				+ "\r\n        moreFilterOptionsButton.classList.add(\"Selected\");"
				+ "\r\n        moreFilterOptions.style.display = \"block\";"
				+ "\r\n      }"
				+ "\r\n    }"
				+ "\r\n"
				+ "\r\n    if ('scrollRestoration' in history)"
				+ "\r\n    {"
				+ "\r\n      history.scrollRestoration = 'manual';"
				+ "\r\n    }"
				+ "\r\n    window.addEventListener("
				+ "\r\n      \"load\","
				+ "\r\n      function ()"
				+ "\r\n      {"
				+ "\r\n        updateLogRecordsInfo();"
				+ "\r\n        {"
				+ "\r\n          var beginTimeInput = document.getElementById(\"beginTimeInput\");"
				+ "\r\n          beginTimeInput.value = timeCaptionWithDate(new Date(_allLogsBeginTime));"
				+ "\r\n          beginTimeInput.setAttribute(\"timeStamp\", _allLogsBeginTime);"
				+ "\r\n"
				+ "\r\n          var endTimeInput = document.getElementById(\"endTimeInput\");"
				+ "\r\n          endTimeInput.value = timeCaptionWithDate(new Date(_allLogsEndTime));"
				+ "\r\n          endTimeInput.setAttribute(\"timeStamp\", _allLogsEndTime);"
				+ "\r\n        }"
				+ "\r\n        var dateTimeInputs = document.getElementsByClassName(\"dateTimeInput\");"
				+ "\r\n        if (dateTimeInputs == null"
				+ "\r\n          || dateTimeInputs.length < 1)"
				+ "\r\n        {"
				+ "\r\n          return;"
				+ "\r\n        }"
				+ "\r\n        for (var i = 0;"
				+ "\r\n          i < dateTimeInputs.length;"
				+ "\r\n          i++)"
				+ "\r\n        {"
				+ "\r\n          var dateTimeInput = dateTimeInputs[i];"
				+ "\r\n          dateTimeInput.addEventListener(\"focus\", toDidDateTimeInputFocus);"
				+ "\r\n          dateTimeInput.addEventListener(\"blur\", toDidDateTimeInputBlur);"
				+ "\r\n        }"
				+ "\r\n"
				+ "\r\n        var body = document.body;"
				+ "\r\n        { }"
				+ "\r\n        body.scrollTop = body.scrollHeight - body.clientHeight;"
				+ "\r\n"
				+ "\r\n        var inputs = document.getElementsByTagName(\"INPUT\");"
				+ "\r\n        if (inputs != null"
				+ "\r\n          && inputs.length > 0)"
				+ "\r\n        {"
				+ "\r\n          for (var inputIndex = inputs.length - 1;"
				+ "\r\n            inputIndex >= 0;"
				+ "\r\n            inputIndex--)"
				+ "\r\n          {"
				+ "\r\n            var input = inputs[inputIndex];"
				+ "\r\n            input.addEventListener("
				+ "\r\n              \"keydown\","
				+ "\r\n              function ()"
				+ "\r\n              {"
				+ "\r\n                if (event.key != null"
				+ "\r\n                  && 'enter' == event.key.toLowerCase())"
				+ "\r\n                {"
				+ "\r\n                  didFilterButtonClicked();"
				+ "\r\n                }"
				+ "\r\n              });"
				+ "\r\n          }"
				+ "\r\n        }"
				+ "\r\n      });"
				+ "\r\n  </script>"
				+ "\r\n</head>"
				+ "\r\n<div id=\"topBarFrame\"></div>"
				+ "\r\n<div id=\"topBar\">"
				+ "\r\n  <h1>" + logfileName + "</h1>"
				+ "\r\n  <div id=\"allLogsInfoBar\">"
				+ "\r\n  </div>"
				+ "\r\n  <div class=\"ToolBar\">"
				+ "\r\n    <div>"
				+ "\r\n      过滤时间段：<input id=\"beginTimeInput\" type=\"text\" class=\"DateTimeInput\" />&nbsp;-&nbsp;<input id=\"endTimeInput\""
				+ "\r\n        type=\"text\" class=\"DateTimeInput\" />"
				+ "\r\n      &nbsp;&nbsp;&nbsp;"
				+ "\r\n    </div>"
				+ "\r\n    <div>"
				+ "\r\n      必须包含：<input id=\"keywordsMustContainedInput_0\" type=\"text\" />"
				+ "\r\n      &nbsp;&nbsp;&nbsp;"
				+ "\r\n      必须不包含：<input id=\"keywordsMustNoneContainedInput_0\" type=\"text\" />"
				+ "\r\n      <br />"
				+ "\r\n      <div id=\"moreFilterOptions\">"
				+ "\r\n        必须包含：<input id=\"keywordsMustContainedInput_1\" type=\"text\" />"
				+ "\r\n        &nbsp;&nbsp;&nbsp;"
				+ "\r\n        必须不包含：<input id=\"keywordsMustNoneContainedInput_1\" type=\"text\" />"
				+ "\r\n      </div>"
				+ "\r\n    </div>"
				+ "\r\n    &nbsp;&nbsp;&nbsp;"
				+ "\r\n    <div>"
				+ "\r\n      <button class=\"Highlight\" onclick=\"didFilterButtonClicked();\">筛选</button>"
				+ "\r\n      &nbsp;"
				+ "\r\n      <!-- 更多按钮 -->"
				+ "\r\n      <button id=\"moreFilterOptionsButton\" class=\"Square\" onclick=\"didMoreFilterOptionsButtonClicked();\">"
				+ "\r\n        <svg t=\"1658053219085\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\""
				+ "\r\n          p-id=\"3033\" width=\"14\" height=\"14\">"
				+ "\r\n          <path"
				+ "\r\n            d=\"M512 565.12a45.44 45.44 0 0 1-32.64-13.44l-448-451.84a45.44 45.44 0 0 1 64-64L512 454.4 931.84 35.2a46.08 46.08 0 0 1 64 0 45.44 45.44 0 0 1 0 64L545.28 551.68a45.44 45.44 0 0 1-33.28 13.44z\""
				+ "\r\n            fill=\"#333333\" p-id=\"3034\"></path>"
				+ "\r\n          <path"
				+ "\r\n            d=\"M512 1016.96a45.44 45.44 0 0 1-32.64-13.44l-448-451.84a45.44 45.44 0 0 1 64-64L512 906.24l419.2-419.2a46.08 46.08 0 0 1 64 0 45.44 45.44 0 0 1 0 64l-449.92 452.48a45.44 45.44 0 0 1-33.28 13.44z\""
				+ "\r\n            fill=\"#333333\" p-id=\"3035\"></path>"
				+ "\r\n        </svg>"
				+ "\r\n      </button>"
				+ "\r\n    </div>"
				+ "\r\n  </div>"
				+ "\r\n</div>"
				+ "\r\n<div id=\"tipBar\">"
				+ "\r\n  正在筛选..."
				+ "\r\n</div>";
			{ }
			return html;
		}
	}
}
